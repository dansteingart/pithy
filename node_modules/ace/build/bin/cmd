#!/usr/bin/env node
"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{"default":e}}function helpCmd(){console.log("\nace is a package manager for Node.\n\nUsage:\n\n  ace command [arguments]\n\nThe commands are:\n\n  install     fetch packages and dependencies\n  run         run a package.json script\n  test        run the test-suite of the current package\n  start       runs `ace run start`\n  stop        runs `ace run stop`\n  build       runs `ace run build`\n  shell       enter a sub-shell with augmented PATH\n  ping        check if the registry is up\n  ls          print the dependency graph\n  config      print the used config\n  init        initialize a new package\n  link        link the current package or into it\n  unlink      unlink the current package or from it\n\nFlags:\n  -h, --help      show usage information\n  -v, --version   print the current version\n  -S, --save      update package.json dependencies\n  -D, --save-dev  update package.json devDependencies\n  -o, --only      install a subset of the dependencies\n  -r, --registry  use a custom registry (default: http://registry.npmjs.org/)\n\nExample:\n  ace install\n  ace install <pkg>\n  ace install <pkg>@<version>\n  ace install <pkg>@<version range>\n\n  Can specify one or more: ace install semver@^5.0.1 tape\n  If no argument is supplied, installs dependencies from package.json.\n  Sub-commands can also be called via their shorthand aliases.\n  ")}function versionCmd(){console.log("ace version",require("../package.json").version)}var _create=require("babel-runtime/core-js/object/create"),_create2=_interopRequireDefault(_create),_minimist=require("minimist"),_minimist2=_interopRequireDefault(_minimist),_config=require("../lib/config"),_config2=_interopRequireDefault(_config),_install_cmd=require("../lib/install_cmd"),_install_cmd2=_interopRequireDefault(_install_cmd),_run_cmd=require("../lib/run_cmd"),_run_cmd2=_interopRequireDefault(_run_cmd),_shell_cmd=require("../lib/shell_cmd"),_shell_cmd2=_interopRequireDefault(_shell_cmd),_ping_cmd=require("../lib/ping_cmd"),_ping_cmd2=_interopRequireDefault(_ping_cmd),_ls_cmd=require("../lib/ls_cmd"),_ls_cmd2=_interopRequireDefault(_ls_cmd),_config_cmd=require("../lib/config_cmd"),_config_cmd2=_interopRequireDefault(_config_cmd),_init_cmd=require("../lib/init_cmd"),_init_cmd2=_interopRequireDefault(_init_cmd),_link_cmd=require("../lib/link_cmd"),_link_cmd2=_interopRequireDefault(_link_cmd),_unlink_cmd=require("../lib/unlink_cmd"),_unlink_cmd2=_interopRequireDefault(_unlink_cmd),cwd=process.cwd(),argv=(0,_minimist2["default"])(process.argv.slice(2),{alias:{h:"help",v:"version",S:"save",D:"save-dev",o:"only",r:"registry"}});argv.registry&&(_config2["default"].registry=argv.registry),function(){if(argv.help)return helpCmd();if(argv.version)return versionCmd();switch(argv._[0]){case"i":case"install":(0,_install_cmd2["default"])(cwd,argv).then()["catch"](function(e){throw console.log("Error",e),e});break;case"sh":case"shell":(0,_shell_cmd2["default"])(cwd);break;case"r":case"run":case"run-script":(0,_run_cmd2["default"])(cwd,argv).then()["catch"](function(e){throw console.log("Error",e),e});break;case"t":case"start":case"build":case"stop":case"test":var e=(0,_create2["default"])(argv);e._=["run"].concat(argv._),(0,_run_cmd2["default"])(cwd,e).then()["catch"](function(e){throw console.log("Error",e),e});break;case"ls":(0,_ls_cmd2["default"])(cwd).then()["catch"](function(e){throw console.log("Error",e),e});break;case"ping":(0,_ping_cmd2["default"])().then()["catch"](function(e){throw console.log("Error",e),e});break;case"conf":case"config":(0,_config_cmd2["default"])();break;case"init":(0,_init_cmd2["default"])(cwd,argv).then()["catch"](function(e){throw console.log("Error",e),e});break;case"link":(0,_link_cmd2["default"])(cwd,argv).then()["catch"](function(e){throw console.log("Error",e),e});break;case"unlink":(0,_unlink_cmd2["default"])(cwd,argv).then()["catch"](function(e){throw console.log("Error",e),e});break;default:helpCmd()}}();